<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">
    <changeSet author="Szczepaniak-M" id="202108141232">
        <comment>Initialize tables</comment>
        <createTable tableName="book">
            <column autoIncrement="true" name="id" type="INT">
                <constraints primaryKey="true"/>
            </column>
            <column name="name" type="VARCHAR(31)">
                <constraints nullable="false"/>
            </column>
            <column name="rating" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>
    <changeSet author="Szczepaniak-M" id="202108141233">
        <comment>Initialize history table</comment>
        <createTable tableName="book_history">
            <column autoIncrement="true" name="historyId" type="INT">
                <constraints primaryKey="true"/>
            </column>
            <column name="operation" type="VARCHAR(7)">
                <constraints nullable="false"/>
            </column>
            <column name="operation_time" type="TIMESTAMP" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="id" type="INT"/>
            <column name="name" type="VARCHAR(31)"/>
            <column name="rating" type="DOUBLE"/>
        </createTable>
    </changeSet>
    <changeSet author="Szczepaniak-M" id="202108141235" dbms="mysql">
        <sql>
            CREATE TRIGGER after_book_insert
                AFTER INSERT ON book
                FOR EACH ROW
                INSERT INTO book_history (operation, id, name, rating)
                VALUES ('insert', NEW.id, NEW.name, NEW.rating);

            CREATE TRIGGER after_book_update
                AFTER UPDATE ON book
                FOR EACH ROW
                INSERT INTO book_history (operation, id, name, rating)
                VALUES ('update', NEW.id, NEW.name, NEW.rating);

            CREATE TRIGGER after_book_delete
                AFTER DELETE ON book
                FOR EACH ROW
                INSERT INTO book_history (operation, id, name, rating)
                VALUES ('delete', OLD.id, OLD.name, OLD.rating);
        </sql>
    </changeSet>
</databaseChangeLog>
